Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-12-21T08:54:38-05:00

====== Thursday 21 Dec 2017 ======

===== mplabx, cont =====
ok, haven't had much appetite for computer-related stuff over the last few days.

started a new throw-away harmony project, to map out what MHC does with various options. See various tarballs with name beginning "MZ_Buildup"

wanted to get back to example for my EZ board that blinks LEDs. Found it at http://microchipdeveloper.com/harmony:example-tmr-sys-mz-ef-sk
	[[http://microchip.wikidot.com/local--files/32bit:mx-osc/PIC32_OSC_CONFIG_v1.1.xlsx|cool clock configuration spreadsheet]] (from [[http://microchipdeveloper.com/32bit:mz-osc|this page]], from step 3 of the the [[http://microchipdeveloper.com/harmony:example-tmr-sys-mz-ef-sk|tutorial]] referenced just above)

@ end of day, got bored w/ side tracks & went back to main project, which was the clock library, but getting the main clock callback working as if it were the LED / blinky project, but with a 1ms tic rate, not a 500ms core tic rate.

Because of the way Harmony is structured, the differentiation between CPU architecture, the Board-specific features, and the System/os is kind of muddled, compared to the way Linux Kernel and AUTOSAR break it apart. For now, I guess I'll create a BSP folder to kind of fuzz the differences; maybe, the thing I should do immediately after getting the MZ EZ going would be to add the Calypso and the SAMV71 Xplained working also. This might help clarify things a bit.


done in windows 7
Using MPLAB in a "sister" throw-away project to create the skeleton, then COPYING (not linking) the files and/or file contents as appropriate.

created shortcut to harmony's framework (tree is manually pruned to show important-for-now stuff). reference folder is itself a symlink to the actual installation folder. don't know if it's wise or not, but for now i'm ignoring the version of harmony, which as of this writing is 2.04.
{{{code: lang="sh" linenumbers="True"

$ ln -s $(realpath /cygdrive/e/harmony/v2_05/framework) framework

$ tree -dL 3 ../cwsw_clock_prj/
../cwsw_clock_prj/
├── arch
│   └── PIC32MZ2048EFM
│       └── framework -> /cygdrive/g/_Programs/Microchip/harmony/v2_05/framework
├── cwsw_bsp
│   ├── include
│   └── src
├── cwsw_clock
│   ├── include
│   └── src
├── cwsw_lib -> ../cwsw_lib_prj/cwsw_lib
└── ut

}}}


Microchip target:
Debug_Win_MZ2048EFM : Development and debugging on Windows, using Microchip XC Build Tools
new env-vars:
	''PIC32_XC_HOME=G:\_Programs\Microchip\xc32\v1.44\pic32mx\bin''
		on 2nd test installation: E:\_Programs\Microchip\xc32\v1.44\pic32mx
	''PIC32_XC_INCLUDE=G:\_Programs\Microchip\xc32\v1.44\pic32mx\include''

Cross prefix: (nil)
Cross path:	''${PIC32_XC_HOME}''
Include path:	${''PIC32_XC_INCLUDE}''

to refresh, for MinGW, the two main env-vars:
	''MINGW_HOME=C:\MinGW''		(or wherever you installed MinGW)
	''MSYS_HOME=C:\MinGW\msys\1.0''	(again, verify this is the correct location)

